class Solution {
    public int oddCells(int m, int n, int[][] indices) {
    int[][] mat=new int[m][n];
    int count=0;
    for(int ind=0 ; ind<indices.length ; ind++){
      int r=indices[ind][0],c=indices[ind][1];
      for(int i=0 ; i<n ; i++)
         mat[r][i]++;
      for(int i=0 ; i<m ; i++)
         mat[i][c]++;
     }
    for(int i=0 ; i<m ; i++){
      for(int j=0 ; j<n ; j++){
         if((mat[i][j]&1)==1)
            count++;
      }
    }
    return count;
    }
    //here is another optimized solution:-
//     public int oddCells(int m, int n, int[][] indices)     {
//         boolean[] row = new boolean[m];
//         boolean[] col = new boolean[n];
        
//         for(int i=0 ; i<indices.length ; i++) {
//             row[indices[i][0]] ^= true;
//             col[indices[i][1]] ^= true;
//         }
//         int r = 0;
//         int c = 0;
//         for(int i=0 ; i<m ; i++) {
//             if(row[i]) {
//                 r++;
//             }
//         }
        
//         for(int i=0 ; i<n ; i++) {
//             if(col[i]) {
//                 c++;
//             }
//         }
//         return r*n + c*m - 2*r*c;
//     }
}
